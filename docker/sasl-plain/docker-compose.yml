---
version: '3'

networks:
  kafka_dev_sandbox:
    driver: bridge

services:

  # The ZooKeeper node
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider -Dzookeeper.4lw.commands.whitelist=ruok"
    extra_hosts:
      - "moby:127.0.0.1"
    networks:
      - kafka_dev_sandbox
    volumes:
      - ./ssl:/etc/kafka/secrets:ro
      - ./kafka-connect-envcfg/zkhealthcheck:/opt/zkhealthcheck
    healthcheck:
      test: ["CMD", "/opt/zkhealthcheck"]
      interval: 30s
      timeout: 10s
      retries: 4
    labels:
      kafka.sandbox.container.type: "zookeeper"

  # The Kafka broker
  # Duplicate this service to spin up more Kafka brokers
  kafka1:
    # image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    image: confluentinc/cp-enterprise-kafka:${CONFLUENT_VERSION}
    hostname: kafka1
    container_name: kafka1
    ports:
      - "29092:29092"
      - "29094:29094"
      - "39998:39998"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SASL_SSL:SASL_SSL,SASL_SSL_HOST:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,SASL_SSL://kafka1:9094,PLAINTEXT_HOST://localhost:29092,SASL_SSL_HOST://localhost:29094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SSL_KEYSTORE_FILENAME: kafka1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      # Confluent Metrics Reporter.
      CONFLUENT_METRICS_ENABLE: 'false'
      # CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - ./ssl:/etc/kafka/secrets:ro
      - ./prometheus:/opt/prometheus:ro
    command: '/etc/confluent/docker/run KAFKA_OPTS="-Djava.security.auth.login.config=/etc/kafka/secrets/kafka_server_jaas.conf -javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar=39998:/opt/prometheus/kafka-prom-jmx-agent-config.yml"'
    extra_hosts:
      - "moby:127.0.0.1"
    networks:
      - kafka_dev_sandbox
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka1:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      kafka.sandbox.container.type: "kafka"

  # Confluent Schema Registry
  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:9092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_LISTENERS: http://localhost:8081,http://schema-registry:8081
    extra_hosts:
      - "moby:127.0.0.1"
    networks:
      - kafka_dev_sandbox
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      kafka.sandbox.container.type: "schema-registry"
