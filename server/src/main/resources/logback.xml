<configuration>

  <conversionRule conversionWord="colouredLevel"
                  converterClass="net.scalytica.kafka.wsproxy.logging.ColouredLevel"/>

  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>

  <if condition='property("WS_PROXY_USE_JSON_LOG_FORMAT").contains("true")'>
    <!--
      If the WS_PROXY_USE_JSON_LOG_FORMAT env is true, the application will
      write to the log using the JSON layout.
    -->
    <then>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
          <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
              <prettyPrint>false</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy-MM-dd' 'HH:mm:ss.SSS</timestampFormat>
            <appendLineSeparator>true</appendLineSeparator>
          </layout>
        </encoder>
      </appender>
    </then>
    <!-- By default, the application will use the regular pattern layout -->
    <else>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>
            %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %colouredLevel %logger{36} - %msg%n
          </pattern>
        </encoder>
      </appender>
    </else>
  </if>

  <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="STDOUT"/>
  </appender>

  <!--
    Variable definitions allowing important loggers to be configured using
    environment variables.
  -->
  <variable name="WS_PROXY_AKKA_ACTOR_LOG_LEVEL" value="${WS_PROXY_AKKA_ACTOR_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_AKKA_HTTP_LOG_LEVEL" value="${WS_PROXY_AKKA_HTTP_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_AKKA_KAFKA_LOG_LEVEL" value="${WS_PROXY_AKKA_KAFKA_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_KAFKA_CLIENTS_LOG_LEVEL" value="${WS_PROXY_KAFKA_CLIENTS_LOG_LEVEL:-WARN}"/>

  <variable name="WS_PROXY_APP_LOG_LEVEL" value="${WS_PROXY_APP_LOG_LEVEL:-DEBUG}"/>
  <variable name="WS_PROXY_AUTH_LOG_LEVEL" value="${WS_PROXY_AUTH_LOG_LEVEL:-DEBUG}"/>
  <variable name="WS_PROXY_ADMIN_LOG_LEVEL" value="${WS_PROXY_ADMIN_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_CODECS_LOG_LEVEL" value="${WS_PROXY_CODECS_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_CONFIG_LOG_LEVEL" value="${WS_PROXY_CONFIG_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_CONSUMER_LOG_LEVEL" value="${WS_PROXY_CONSUMER_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_PRODUCER_LOG_LEVEL" value="${WS_PROXY_PRODUCER_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_SESSION_LOG_LEVEL" value="${WS_PROXY_SESSION_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_UTILS_LOG_LEVEL" value="${WS_PROXY_UTILS_LOG_LEVEL:-WARN}"/>
  <variable name="WS_PROXY_ROOT_LOG_LEVEL" value="${WS_PROXY_ROOT_LOG_LEVEL:-WARN}"/>

  <logger name="akka.actor" level="${WS_PROXY_AKKA_ACTOR_LOG_LEVEL}"/>
  <logger name="akka.http" level="${WS_PROXY_AKKA_HTTP_LOG_LEVEL}"/>
  <logger name="akka.kafka" level="${WS_PROXY_AKKA_KAFKA_LOG_LEVEL}"/>

  <logger name="org.apache.kafka.clients" level="${WS_PROXY_KAFKA_CLIENTS_LOG_LEVEL}"/>

  <!-- Admin and general configuration -->
  <logger name="net.scalytica.kafka.wsproxy.admin" level="${WS_PROXY_ADMIN_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.jmx" level="${WS_PROXY_ADMIN_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.config" level="${WS_PROXY_CONFIG_LOG_LEVEL}"/>
  <!-- Client usage related -->
  <logger name="net.scalytica.kafka.wsproxy.auth" level="${WS_PROXY_AUTH_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.codecs" level="${WS_PROXY_CODECS_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.consumer" level="${WS_PROXY_CONSUMER_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.producer" level="${WS_PROXY_PRODUCER_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.session" level="${WS_PROXY_SESSION_LOG_LEVEL}"/>
  <logger name="net.scalytica.kafka.wsproxy.utils" level="${WS_PROXY_UTILS_LOG_LEVEL}"/>
  <!-- Base application logging -->
  <logger name="net.scalytica.kafka.wsproxy" level="${WS_PROXY_APP_LOG_LEVEL}"/>

  <!-- Root loggers catch all other events that are not explicitly handled-->
  <root level="${WS_PROXY_ROOT_LOG_LEVEL}">
    <appender-ref ref="ASYNC_STDOUT"/>
  </root>

</configuration>
