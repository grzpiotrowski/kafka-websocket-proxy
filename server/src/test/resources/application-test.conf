include "http.conf"
include "kafka.conf"

kafka.ws.proxy {
  server {
    server-id = "node-1"
    bind-interface = "0.0.0.0"
    port = 8078

    broker-resolution-timeout = 30 seconds
    broker-resolution-retries = 25
    broker-resolution-retry-interval = 1 second

    secure-health-check-endpoint = true

    jmx {
      manager {
        proxy.status.interval = 5 seconds
      }
    }
  }

  kafka-client {
    broker-resolution-timeout = 10 seconds
    bootstrap-hosts = "localhost:29092"
    schema-registry {
      url = "http://localhost:28081"
      auto-register-schemas = true
    }

    monitoring-enabled = false

    properties {
      security.protocol = PLAINTEXT

      request.timeout.ms = 20000
      retries = 2147483647
      retry.backoff.ms = 500
    }

    confluent-monitoring {
      bootstrap-hosts = ${kafka.ws.proxy.kafka-client.bootstrap-hosts}
      properties {
        security.protocol = PLAINTEXT
      }
    }
  }

  admin-client {
    kafka-client-properties = ${kafka.ws.proxy.kafka-client.properties}
  }

  consumer {
    limits {
      default-messages-per-second = 0
      default-max-connections-per-client = 0
      default-batch-size = 0
      client-specific-limits: [
        {
          group-id = "dummy"
          messages-per-second = 10
          max-connections = 2
        }
      ]
    }
    kafka-client-properties = ${kafka.ws.proxy.kafka-client.properties}
  }

  producer {
    sessions-enabled = false
    limits {
      default-messages-per-second = 0
      default-max-connections-per-client = 0
      client-specific-limits: [
        {
          producer-id = "limit-test-producer-1"
          messages-per-second = 10
          max-connections = 1
        },
        {
          producer-id = "limit-test-producer-2"
          messages-per-second = 10
          max-connections = 2
        }
      ]
    }
    kafka-client-properties = ${kafka.ws.proxy.kafka-client.properties} {
      delivery.timeout.ms = 20000
    }
  }

  session-handler {
    session-state-topic-init-timeout = 30 seconds
    session-state-topic-init-retries = 25
    session-state-topic-init-retry-interval = 1 second
    session-state-topic-name = "_wsproxy.session.state"
    session-state-replication-factor = 3
    session-state-retention = 30 days
  }

  commit-handler {
    max-stack-size: 20
    auto-commit-enabled: false
    auto-commit-interval: 1 second
    auto-commit-max-age: 20 seconds
  }
}

# The Actor system...
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters-during-shutdown = off

  http.server.websocket.periodic-keep-alive-max-idle = 5 seconds

  actor.testkit.typed {
    timefactor =  10.0
  }

  test {
    timefactor =  10.0
  }
}